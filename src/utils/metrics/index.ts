import { MetricId, MetricName, MetricOption } from '../types';

export const metricNames: { [key in MetricId]: MetricName } = {
  [MetricId.bloodPressure]: MetricName.bloodPressure,
  [MetricId.cholesterolTotal]: MetricName.cholesterolTotal,
  [MetricId.heartRate]: MetricName.heartRate,
  [MetricId.hemoglobinA1c]: MetricName.hemoglobinA1c,
  [MetricId.weight]: MetricName.weight,
};

// todo type -> key
export const allMetrics: MetricOption[] = [
  {
    key: 'noMetric',
    id: null,
    name: '',
    disabled: true,
    max: 0,
    min: 0,
    step: 0,
    type: '',
  },
  {
    id: MetricId.bloodPressure,
    key: 'bloodPressure',
    name: MetricName.bloodPressure,
    type: ' mm Hg',
    disabled: false,
    max: 300,
    min: 0,
    default: 100,
    step: 1,
  },
  {
    key: 'cholesterolTotal',
    id: MetricId.cholesterolTotal,
    name: MetricName.cholesterolTotal,
    type: ' mmol/L',
    disabled: false,
    max: 300,
    min: 0,
    default: 120,
    step: 1,
  },
  {
    key: 'heartRate',
    id: MetricId.heartRate,
    name: MetricName.heartRate,
    type: 'bpm',
    disabled: false,
    max: 300,
    min: 0,
    default: 60,
    step: 1,
  },
  {
    key: 'hemoglobinA1c',
    id: MetricId.hemoglobinA1c,
    name: MetricName.hemoglobinA1c,
    type: '%',
    disabled: false,
    max: 50,
    min: 0,
    default: 5.0,
    step: 0.1,
  },
  {
    key: 'weight',
    id: MetricId.weight,
    name: MetricName.weight,
    type: ' lbs',
    disabled: false,
    max: 800,
    default: 150,
    min: 0,
    step: 0.1,
    precision: 1,
  },
];
